// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rcapis/rpc/deepschd/task.proto

package task

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_struct "github.com/golang/protobuf/ptypes/struct"
	_ "github.com/rcrai/rcapis/rcapis/api/annotations"
	code "github.com/rcrai/rcapis/rcapis/rpc/code"
	progress "github.com/rcrai/rcapis/rcapis/rpc/deepschd/progress"
	status "github.com/rcrai/rcapis/rcapis/rpc/status"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type StatisticsRequest struct {
	// Required. The project of this task.
	Project              string   `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatisticsRequest) Reset()         { *m = StatisticsRequest{} }
func (m *StatisticsRequest) String() string { return proto.CompactTextString(m) }
func (*StatisticsRequest) ProtoMessage()    {}
func (*StatisticsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_972167853ba33b15, []int{0}
}

func (m *StatisticsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatisticsRequest.Unmarshal(m, b)
}
func (m *StatisticsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatisticsRequest.Marshal(b, m, deterministic)
}
func (m *StatisticsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatisticsRequest.Merge(m, src)
}
func (m *StatisticsRequest) XXX_Size() int {
	return xxx_messageInfo_StatisticsRequest.Size(m)
}
func (m *StatisticsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StatisticsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StatisticsRequest proto.InternalMessageInfo

func (m *StatisticsRequest) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

type StatisticsResponse struct {
	// Required. The project of this task.
	Project              string          `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	Data                 *_struct.Struct `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *StatisticsResponse) Reset()         { *m = StatisticsResponse{} }
func (m *StatisticsResponse) String() string { return proto.CompactTextString(m) }
func (*StatisticsResponse) ProtoMessage()    {}
func (*StatisticsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_972167853ba33b15, []int{1}
}

func (m *StatisticsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatisticsResponse.Unmarshal(m, b)
}
func (m *StatisticsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatisticsResponse.Marshal(b, m, deterministic)
}
func (m *StatisticsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatisticsResponse.Merge(m, src)
}
func (m *StatisticsResponse) XXX_Size() int {
	return xxx_messageInfo_StatisticsResponse.Size(m)
}
func (m *StatisticsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StatisticsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StatisticsResponse proto.InternalMessageInfo

func (m *StatisticsResponse) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

func (m *StatisticsResponse) GetData() *_struct.Struct {
	if m != nil {
		return m.Data
	}
	return nil
}

type TaskResult struct {
	Docs                 []*_struct.Struct `protobuf:"bytes,1,rep,name=docs,proto3" json:"docs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TaskResult) Reset()         { *m = TaskResult{} }
func (m *TaskResult) String() string { return proto.CompactTextString(m) }
func (*TaskResult) ProtoMessage()    {}
func (*TaskResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_972167853ba33b15, []int{2}
}

func (m *TaskResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskResult.Unmarshal(m, b)
}
func (m *TaskResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskResult.Marshal(b, m, deterministic)
}
func (m *TaskResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskResult.Merge(m, src)
}
func (m *TaskResult) XXX_Size() int {
	return xxx_messageInfo_TaskResult.Size(m)
}
func (m *TaskResult) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskResult.DiscardUnknown(m)
}

var xxx_messageInfo_TaskResult proto.InternalMessageInfo

func (m *TaskResult) GetDocs() []*_struct.Struct {
	if m != nil {
		return m.Docs
	}
	return nil
}

type Task struct {
	// Required. The project of this task.
	Project string `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	// Required. The ID of this task.
	TaskId   string            `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Nice     uint32            `protobuf:"varint,3,opt,name=nice,proto3" json:"nice,omitempty"`
	Progress progress.Progress `protobuf:"varint,4,opt,name=progress,proto3,enum=rcrai.rpc.deepschd.Progress" json:"progress,omitempty"`
	TaskUri  string            `protobuf:"bytes,5,opt,name=task_uri,json=taskUri,proto3" json:"task_uri,omitempty"`
	// Types that are valid to be assigned to Body:
	//	*Task_Result
	//	*Task_Message
	Body                 isTask_Body `protobuf_oneof:"body"`
	OnReady              string      `protobuf:"bytes,8,opt,name=on_ready,json=onReady,proto3" json:"on_ready,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Task) Reset()         { *m = Task{} }
func (m *Task) String() string { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()    {}
func (*Task) Descriptor() ([]byte, []int) {
	return fileDescriptor_972167853ba33b15, []int{3}
}

func (m *Task) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Task.Unmarshal(m, b)
}
func (m *Task) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Task.Marshal(b, m, deterministic)
}
func (m *Task) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Task.Merge(m, src)
}
func (m *Task) XXX_Size() int {
	return xxx_messageInfo_Task.Size(m)
}
func (m *Task) XXX_DiscardUnknown() {
	xxx_messageInfo_Task.DiscardUnknown(m)
}

var xxx_messageInfo_Task proto.InternalMessageInfo

func (m *Task) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

func (m *Task) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *Task) GetNice() uint32 {
	if m != nil {
		return m.Nice
	}
	return 0
}

func (m *Task) GetProgress() progress.Progress {
	if m != nil {
		return m.Progress
	}
	return progress.Progress_OK
}

func (m *Task) GetTaskUri() string {
	if m != nil {
		return m.TaskUri
	}
	return ""
}

type isTask_Body interface {
	isTask_Body()
}

type Task_Result struct {
	Result *TaskResult `protobuf:"bytes,6,opt,name=result,proto3,oneof"`
}

type Task_Message struct {
	Message string `protobuf:"bytes,7,opt,name=message,proto3,oneof"`
}

func (*Task_Result) isTask_Body() {}

func (*Task_Message) isTask_Body() {}

func (m *Task) GetBody() isTask_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *Task) GetResult() *TaskResult {
	if x, ok := m.GetBody().(*Task_Result); ok {
		return x.Result
	}
	return nil
}

func (m *Task) GetMessage() string {
	if x, ok := m.GetBody().(*Task_Message); ok {
		return x.Message
	}
	return ""
}

func (m *Task) GetOnReady() string {
	if m != nil {
		return m.OnReady
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Task) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Task_OneofMarshaler, _Task_OneofUnmarshaler, _Task_OneofSizer, []interface{}{
		(*Task_Result)(nil),
		(*Task_Message)(nil),
	}
}

func _Task_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Task)
	// body
	switch x := m.Body.(type) {
	case *Task_Result:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Result); err != nil {
			return err
		}
	case *Task_Message:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Message)
	case nil:
	default:
		return fmt.Errorf("Task.Body has unexpected type %T", x)
	}
	return nil
}

func _Task_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Task)
	switch tag {
	case 6: // body.result
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TaskResult)
		err := b.DecodeMessage(msg)
		m.Body = &Task_Result{msg}
		return true, err
	case 7: // body.message
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Body = &Task_Message{x}
		return true, err
	default:
		return false, nil
	}
}

func _Task_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Task)
	// body
	switch x := m.Body.(type) {
	case *Task_Result:
		s := proto.Size(x.Result)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Task_Message:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Message)))
		n += len(x.Message)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// The request message for [Tasks.GetTask].
type GetTaskRequest struct {
	// Required. The project that the task to fetch is associated with.
	Project              string   `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	TaskId               string   `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTaskRequest) Reset()         { *m = GetTaskRequest{} }
func (m *GetTaskRequest) String() string { return proto.CompactTextString(m) }
func (*GetTaskRequest) ProtoMessage()    {}
func (*GetTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_972167853ba33b15, []int{4}
}

func (m *GetTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTaskRequest.Unmarshal(m, b)
}
func (m *GetTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTaskRequest.Marshal(b, m, deterministic)
}
func (m *GetTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTaskRequest.Merge(m, src)
}
func (m *GetTaskRequest) XXX_Size() int {
	return xxx_messageInfo_GetTaskRequest.Size(m)
}
func (m *GetTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTaskRequest proto.InternalMessageInfo

func (m *GetTaskRequest) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

func (m *GetTaskRequest) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

type TaskProgress struct {
	// Required. The project of this task.
	Project string `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	// Required. The ID of this task.
	TaskId string `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	// Nice Value
	Nice                 uint32            `protobuf:"varint,3,opt,name=nice,proto3" json:"nice,omitempty"`
	Progress             progress.Progress `protobuf:"varint,4,opt,name=progress,proto3,enum=rcrai.rpc.deepschd.Progress" json:"progress,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TaskProgress) Reset()         { *m = TaskProgress{} }
func (m *TaskProgress) String() string { return proto.CompactTextString(m) }
func (*TaskProgress) ProtoMessage()    {}
func (*TaskProgress) Descriptor() ([]byte, []int) {
	return fileDescriptor_972167853ba33b15, []int{5}
}

func (m *TaskProgress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskProgress.Unmarshal(m, b)
}
func (m *TaskProgress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskProgress.Marshal(b, m, deterministic)
}
func (m *TaskProgress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskProgress.Merge(m, src)
}
func (m *TaskProgress) XXX_Size() int {
	return xxx_messageInfo_TaskProgress.Size(m)
}
func (m *TaskProgress) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskProgress.DiscardUnknown(m)
}

var xxx_messageInfo_TaskProgress proto.InternalMessageInfo

func (m *TaskProgress) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

func (m *TaskProgress) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *TaskProgress) GetNice() uint32 {
	if m != nil {
		return m.Nice
	}
	return 0
}

func (m *TaskProgress) GetProgress() progress.Progress {
	if m != nil {
		return m.Progress
	}
	return progress.Progress_OK
}

// The request message for [Tasks.ImportTask].
type CreateTaskRequest struct {
	// Required. The project that the task to import is associated with.
	Project string `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	// ID
	TaskId string `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	// Nice Value
	Nice uint32 `protobuf:"varint,3,opt,name=nice,proto3" json:"nice,omitempty"`
	// Types that are valid to be assigned to Body:
	//	*CreateTaskRequest_TaskUri
	Body isCreateTaskRequest_Body `protobuf_oneof:"body"`
	// Url for Callback
	OnReady              string   `protobuf:"bytes,6,opt,name=on_ready,json=onReady,proto3" json:"on_ready,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateTaskRequest) Reset()         { *m = CreateTaskRequest{} }
func (m *CreateTaskRequest) String() string { return proto.CompactTextString(m) }
func (*CreateTaskRequest) ProtoMessage()    {}
func (*CreateTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_972167853ba33b15, []int{6}
}

func (m *CreateTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTaskRequest.Unmarshal(m, b)
}
func (m *CreateTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTaskRequest.Marshal(b, m, deterministic)
}
func (m *CreateTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTaskRequest.Merge(m, src)
}
func (m *CreateTaskRequest) XXX_Size() int {
	return xxx_messageInfo_CreateTaskRequest.Size(m)
}
func (m *CreateTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTaskRequest proto.InternalMessageInfo

func (m *CreateTaskRequest) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

func (m *CreateTaskRequest) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *CreateTaskRequest) GetNice() uint32 {
	if m != nil {
		return m.Nice
	}
	return 0
}

type isCreateTaskRequest_Body interface {
	isCreateTaskRequest_Body()
}

type CreateTaskRequest_TaskUri struct {
	TaskUri string `protobuf:"bytes,4,opt,name=task_uri,json=taskUri,proto3,oneof"`
}

func (*CreateTaskRequest_TaskUri) isCreateTaskRequest_Body() {}

func (m *CreateTaskRequest) GetBody() isCreateTaskRequest_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *CreateTaskRequest) GetTaskUri() string {
	if x, ok := m.GetBody().(*CreateTaskRequest_TaskUri); ok {
		return x.TaskUri
	}
	return ""
}

func (m *CreateTaskRequest) GetOnReady() string {
	if m != nil {
		return m.OnReady
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*CreateTaskRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _CreateTaskRequest_OneofMarshaler, _CreateTaskRequest_OneofUnmarshaler, _CreateTaskRequest_OneofSizer, []interface{}{
		(*CreateTaskRequest_TaskUri)(nil),
	}
}

func _CreateTaskRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*CreateTaskRequest)
	// body
	switch x := m.Body.(type) {
	case *CreateTaskRequest_TaskUri:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.TaskUri)
	case nil:
	default:
		return fmt.Errorf("CreateTaskRequest.Body has unexpected type %T", x)
	}
	return nil
}

func _CreateTaskRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*CreateTaskRequest)
	switch tag {
	case 4: // body.task_uri
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Body = &CreateTaskRequest_TaskUri{x}
		return true, err
	default:
		return false, nil
	}
}

func _CreateTaskRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*CreateTaskRequest)
	// body
	switch x := m.Body.(type) {
	case *CreateTaskRequest_TaskUri:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.TaskUri)))
		n += len(x.TaskUri)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type AcquireTaskRequest struct {
	// Required. The project that the task to fetch is associated with.
	Project              string   `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	Count                int32    `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AcquireTaskRequest) Reset()         { *m = AcquireTaskRequest{} }
func (m *AcquireTaskRequest) String() string { return proto.CompactTextString(m) }
func (*AcquireTaskRequest) ProtoMessage()    {}
func (*AcquireTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_972167853ba33b15, []int{7}
}

func (m *AcquireTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AcquireTaskRequest.Unmarshal(m, b)
}
func (m *AcquireTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AcquireTaskRequest.Marshal(b, m, deterministic)
}
func (m *AcquireTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AcquireTaskRequest.Merge(m, src)
}
func (m *AcquireTaskRequest) XXX_Size() int {
	return xxx_messageInfo_AcquireTaskRequest.Size(m)
}
func (m *AcquireTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AcquireTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AcquireTaskRequest proto.InternalMessageInfo

func (m *AcquireTaskRequest) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

func (m *AcquireTaskRequest) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type AcquiredTask struct {
	Project string `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	// ID
	TaskId string `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	// Nice Value, Not in use in current design
	Nice                 uint32   `protobuf:"varint,3,opt,name=nice,proto3" json:"nice,omitempty"`
	TaskUri              string   `protobuf:"bytes,5,opt,name=task_uri,json=taskUri,proto3" json:"task_uri,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AcquiredTask) Reset()         { *m = AcquiredTask{} }
func (m *AcquiredTask) String() string { return proto.CompactTextString(m) }
func (*AcquiredTask) ProtoMessage()    {}
func (*AcquiredTask) Descriptor() ([]byte, []int) {
	return fileDescriptor_972167853ba33b15, []int{8}
}

func (m *AcquiredTask) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AcquiredTask.Unmarshal(m, b)
}
func (m *AcquiredTask) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AcquiredTask.Marshal(b, m, deterministic)
}
func (m *AcquiredTask) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AcquiredTask.Merge(m, src)
}
func (m *AcquiredTask) XXX_Size() int {
	return xxx_messageInfo_AcquiredTask.Size(m)
}
func (m *AcquiredTask) XXX_DiscardUnknown() {
	xxx_messageInfo_AcquiredTask.DiscardUnknown(m)
}

var xxx_messageInfo_AcquiredTask proto.InternalMessageInfo

func (m *AcquiredTask) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

func (m *AcquiredTask) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *AcquiredTask) GetNice() uint32 {
	if m != nil {
		return m.Nice
	}
	return 0
}

func (m *AcquiredTask) GetTaskUri() string {
	if m != nil {
		return m.TaskUri
	}
	return ""
}

type AcquireTaskResponse struct {
	IsEmpty              bool            `protobuf:"varint,1,opt,name=is_empty,json=isEmpty,proto3" json:"is_empty,omitempty"`
	Code                 code.Code       `protobuf:"varint,2,opt,name=code,proto3,enum=rcrai.rpc.Code" json:"code,omitempty"`
	Tasks                []*AcquiredTask `protobuf:"bytes,3,rep,name=tasks,proto3" json:"tasks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *AcquireTaskResponse) Reset()         { *m = AcquireTaskResponse{} }
func (m *AcquireTaskResponse) String() string { return proto.CompactTextString(m) }
func (*AcquireTaskResponse) ProtoMessage()    {}
func (*AcquireTaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_972167853ba33b15, []int{9}
}

func (m *AcquireTaskResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AcquireTaskResponse.Unmarshal(m, b)
}
func (m *AcquireTaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AcquireTaskResponse.Marshal(b, m, deterministic)
}
func (m *AcquireTaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AcquireTaskResponse.Merge(m, src)
}
func (m *AcquireTaskResponse) XXX_Size() int {
	return xxx_messageInfo_AcquireTaskResponse.Size(m)
}
func (m *AcquireTaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AcquireTaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AcquireTaskResponse proto.InternalMessageInfo

func (m *AcquireTaskResponse) GetIsEmpty() bool {
	if m != nil {
		return m.IsEmpty
	}
	return false
}

func (m *AcquireTaskResponse) GetCode() code.Code {
	if m != nil {
		return m.Code
	}
	return code.Code_OK
}

func (m *AcquireTaskResponse) GetTasks() []*AcquiredTask {
	if m != nil {
		return m.Tasks
	}
	return nil
}

type SubmitTaskRequest struct {
	// Required. The project that the task to fetch is associated with.
	Project              string   `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	Tasks                []*Task  `protobuf:"bytes,2,rep,name=tasks,proto3" json:"tasks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubmitTaskRequest) Reset()         { *m = SubmitTaskRequest{} }
func (m *SubmitTaskRequest) String() string { return proto.CompactTextString(m) }
func (*SubmitTaskRequest) ProtoMessage()    {}
func (*SubmitTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_972167853ba33b15, []int{10}
}

func (m *SubmitTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitTaskRequest.Unmarshal(m, b)
}
func (m *SubmitTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitTaskRequest.Marshal(b, m, deterministic)
}
func (m *SubmitTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitTaskRequest.Merge(m, src)
}
func (m *SubmitTaskRequest) XXX_Size() int {
	return xxx_messageInfo_SubmitTaskRequest.Size(m)
}
func (m *SubmitTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitTaskRequest proto.InternalMessageInfo

func (m *SubmitTaskRequest) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

func (m *SubmitTaskRequest) GetTasks() []*Task {
	if m != nil {
		return m.Tasks
	}
	return nil
}

func init() {
	proto.RegisterType((*StatisticsRequest)(nil), "rcrai.rpc.deepschd.StatisticsRequest")
	proto.RegisterType((*StatisticsResponse)(nil), "rcrai.rpc.deepschd.StatisticsResponse")
	proto.RegisterType((*TaskResult)(nil), "rcrai.rpc.deepschd.TaskResult")
	proto.RegisterType((*Task)(nil), "rcrai.rpc.deepschd.Task")
	proto.RegisterType((*GetTaskRequest)(nil), "rcrai.rpc.deepschd.GetTaskRequest")
	proto.RegisterType((*TaskProgress)(nil), "rcrai.rpc.deepschd.TaskProgress")
	proto.RegisterType((*CreateTaskRequest)(nil), "rcrai.rpc.deepschd.CreateTaskRequest")
	proto.RegisterType((*AcquireTaskRequest)(nil), "rcrai.rpc.deepschd.AcquireTaskRequest")
	proto.RegisterType((*AcquiredTask)(nil), "rcrai.rpc.deepschd.AcquiredTask")
	proto.RegisterType((*AcquireTaskResponse)(nil), "rcrai.rpc.deepschd.AcquireTaskResponse")
	proto.RegisterType((*SubmitTaskRequest)(nil), "rcrai.rpc.deepschd.SubmitTaskRequest")
}

func init() { proto.RegisterFile("rcapis/rpc/deepschd/task.proto", fileDescriptor_972167853ba33b15) }

var fileDescriptor_972167853ba33b15 = []byte{
	// 850 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x56, 0xcf, 0x6f, 0xe3, 0x44,
	0x14, 0xde, 0x49, 0xf3, 0xab, 0x6f, 0x97, 0xa2, 0x0c, 0xa0, 0x7a, 0x43, 0xa8, 0xc2, 0x2c, 0x74,
	0x43, 0x60, 0x6d, 0x11, 0x60, 0xb5, 0x64, 0xc5, 0xa1, 0x0d, 0x88, 0x72, 0xab, 0x1c, 0xb8, 0x80,
	0x50, 0xe5, 0x8c, 0xa7, 0x89, 0x49, 0xe3, 0x71, 0x67, 0xc6, 0x54, 0x55, 0xc5, 0x85, 0x0b, 0x70,
	0x40, 0x1c, 0xb8, 0x20, 0x38, 0xf2, 0x27, 0xf1, 0x2f, 0xf0, 0x47, 0x70, 0x44, 0x33, 0xb6, 0x89,
	0x43, 0xed, 0x24, 0x12, 0x48, 0x7b, 0x89, 0x3c, 0xf6, 0x37, 0xef, 0xfb, 0xde, 0xf7, 0xde, 0xcb,
	0x0c, 0x1c, 0x08, 0xea, 0x45, 0x81, 0x74, 0x44, 0x44, 0x1d, 0x9f, 0xb1, 0x48, 0xd2, 0x99, 0xef,
	0x28, 0x4f, 0xce, 0xed, 0x48, 0x70, 0xc5, 0x31, 0x16, 0x54, 0x78, 0x81, 0x2d, 0x22, 0x6a, 0x67,
	0x9f, 0xdb, 0x9d, 0x29, 0xe7, 0xd3, 0x0b, 0xe6, 0x18, 0xc4, 0x24, 0x3e, 0x77, 0xa4, 0x12, 0x31,
	0x55, 0xc9, 0x8e, 0x76, 0x27, 0x8d, 0xe8, 0x45, 0x81, 0xe3, 0x85, 0x21, 0x57, 0x9e, 0x0a, 0x78,
	0x28, 0xd3, 0xaf, 0x2f, 0xe5, 0xf8, 0x28, 0xf7, 0x59, 0xfa, 0x7a, 0x3f, 0xf7, 0x5a, 0x2a, 0x4f,
	0xc5, 0x19, 0x9e, 0x14, 0xe9, 0x8b, 0x04, 0x9f, 0x0a, 0x26, 0x53, 0x0c, 0x79, 0x04, 0xad, 0xb1,
	0x66, 0x91, 0x2a, 0xa0, 0xd2, 0x65, 0x97, 0x31, 0x93, 0x0a, 0x5b, 0xd0, 0x88, 0x04, 0xff, 0x8a,
	0x51, 0x65, 0xa1, 0x2e, 0xea, 0xed, 0xba, 0xd9, 0x92, 0x7c, 0x01, 0x38, 0x0f, 0x97, 0x11, 0x0f,
	0x25, 0x2b, 0xc7, 0xe3, 0x37, 0xa1, 0xea, 0x7b, 0xca, 0xb3, 0x2a, 0x5d, 0xd4, 0xbb, 0x3b, 0xd8,
	0xb7, 0x93, 0xec, 0xed, 0x2c, 0x7b, 0x7b, 0x6c, 0xb2, 0x77, 0x0d, 0x88, 0xbc, 0x0f, 0xf0, 0xa9,
	0x27, 0xe7, 0x2e, 0x93, 0xf1, 0x45, 0xb2, 0x95, 0x53, 0x69, 0xa1, 0xee, 0xce, 0xfa, 0xad, 0x9c,
	0x4a, 0xf2, 0x5b, 0x05, 0xaa, 0x7a, 0xef, 0x1a, 0x29, 0xfb, 0xd0, 0xd0, 0xb5, 0x39, 0x0b, 0x7c,
	0xa3, 0x66, 0xd7, 0xad, 0xeb, 0xe5, 0x27, 0x3e, 0xc6, 0x50, 0x0d, 0x03, 0xca, 0xac, 0x9d, 0x2e,
	0xea, 0x3d, 0xe7, 0x9a, 0x67, 0xfc, 0x04, 0x9a, 0x99, 0x51, 0x56, 0xb5, 0x8b, 0x7a, 0x7b, 0x83,
	0x8e, 0x7d, 0xbb, 0x9a, 0xf6, 0x69, 0x8a, 0x71, 0xff, 0x41, 0xe3, 0xfb, 0xd0, 0x34, 0x34, 0xb1,
	0x08, 0xac, 0x5a, 0xa2, 0x40, 0xaf, 0x3f, 0x13, 0x01, 0x7e, 0x02, 0x75, 0x61, 0x72, 0xb3, 0xea,
	0xc6, 0x8e, 0x83, 0xa2, 0x90, 0x4b, 0x07, 0x4e, 0xee, 0xb8, 0x29, 0x1e, 0xb7, 0xa1, 0xb1, 0x60,
	0x52, 0x7a, 0x53, 0x66, 0x35, 0x74, 0xcc, 0x93, 0x3b, 0x6e, 0xf6, 0x42, 0x13, 0xf2, 0xf0, 0x4c,
	0x30, 0xcf, 0xbf, 0xb6, 0x9a, 0x09, 0x21, 0x0f, 0x5d, 0xbd, 0x3c, 0xae, 0x43, 0x75, 0xc2, 0xfd,
	0x6b, 0x32, 0x82, 0xbd, 0x8f, 0x99, 0x4a, 0x22, 0x6f, 0xa8, 0x70, 0xa9, 0x4d, 0xe4, 0x27, 0x04,
	0xf7, 0x74, 0x88, 0x2c, 0xe7, 0x67, 0x6e, 0x35, 0xf9, 0x15, 0x41, 0x6b, 0x24, 0x98, 0xa7, 0xd8,
	0x7f, 0x4b, 0xad, 0x50, 0xd6, 0xcb, 0xb9, 0x3a, 0x56, 0x33, 0xcf, 0xb3, 0x4a, 0xe6, 0x3d, 0xaf,
	0x17, 0x7b, 0xfe, 0x21, 0xe0, 0x23, 0x7a, 0x19, 0x07, 0x62, 0x4b, 0x71, 0x2f, 0x42, 0x8d, 0xf2,
	0x38, 0x54, 0x46, 0x5a, 0xcd, 0x4d, 0x16, 0x24, 0x82, 0x7b, 0x69, 0x14, 0xff, 0xff, 0x6c, 0xef,
	0xf2, 0x26, 0x25, 0x3f, 0x22, 0x78, 0x61, 0x45, 0x78, 0x3a, 0xe3, 0xf7, 0xa1, 0x19, 0xc8, 0x33,
	0xb6, 0x88, 0xd4, 0xb5, 0xa1, 0x6e, 0xba, 0x8d, 0x40, 0x7e, 0xa4, 0x97, 0xf8, 0x01, 0x54, 0xf5,
	0xdf, 0x91, 0xe1, 0xdd, 0x1b, 0x3c, 0x9f, 0xab, 0xde, 0x88, 0xfb, 0xcc, 0x35, 0x1f, 0xf1, 0x63,
	0xa8, 0x69, 0x0a, 0x69, 0xed, 0x98, 0x79, 0xee, 0x16, 0xd5, 0x38, 0x9f, 0xaa, 0x9b, 0xc0, 0xc9,
	0x97, 0xd0, 0x1a, 0xc7, 0x93, 0x45, 0xb0, 0x65, 0xfb, 0xda, 0x19, 0x4d, 0xc5, 0xd0, 0x58, 0xa5,
	0x23, 0x96, 0xc0, 0x06, 0xbf, 0x37, 0xa0, 0xa6, 0xd7, 0x12, 0x5f, 0x41, 0x23, 0x1d, 0x12, 0x4c,
	0x8a, 0x76, 0xad, 0x4e, 0x50, 0xbb, 0x34, 0x32, 0xb1, 0xbf, 0xfd, 0xe3, 0xcf, 0x9f, 0x2b, 0x3d,
	0x7c, 0xe8, 0x7c, 0xfd, 0xb6, 0x39, 0x0e, 0xa4, 0x73, 0x93, 0xca, 0xfb, 0xa0, 0xff, 0x8d, 0x73,
	0x93, 0x96, 0x49, 0x3f, 0xeb, 0x47, 0xfc, 0x0b, 0x02, 0x58, 0xb6, 0x31, 0x7e, 0xbd, 0x28, 0xf0,
	0xad, 0x36, 0x6f, 0x77, 0xcb, 0xf8, 0xb3, 0x41, 0x21, 0x47, 0x46, 0xc7, 0x53, 0xf2, 0x78, 0xb3,
	0x8e, 0x1b, 0xdd, 0x15, 0x99, 0xa0, 0x21, 0x35, 0x64, 0x43, 0xd4, 0xc7, 0x21, 0xc0, 0xc8, 0x0b,
	0x29, 0xbb, 0xd8, 0xda, 0x96, 0x56, 0x0e, 0x33, 0x36, 0x87, 0x11, 0x79, 0xc3, 0xe8, 0x78, 0xd0,
	0x7f, 0x75, 0xa3, 0x0e, 0xfc, 0x1d, 0x82, 0xdd, 0xd1, 0x8c, 0xd1, 0xf9, 0xd6, 0x7c, 0x9b, 0x6d,
	0x78, 0xd7, 0xd0, 0xdb, 0xf8, 0xad, 0xed, 0xca, 0x31, 0xa4, 0x9a, 0x1f, 0x7f, 0x8f, 0xa0, 0x95,
	0x52, 0x2d, 0x0f, 0xbc, 0xe2, 0xda, 0xdc, 0x3a, 0x3f, 0xdb, 0x87, 0x9b, 0x60, 0xc9, 0x4c, 0x91,
	0xd7, 0x8c, 0xb4, 0x03, 0xdc, 0x29, 0x96, 0x96, 0x1c, 0xe6, 0xf8, 0x07, 0x04, 0x77, 0x73, 0x13,
	0x89, 0x0f, 0xd7, 0x8c, 0x4e, 0xde, 0x9a, 0x87, 0x1b, 0x71, 0xa9, 0x8c, 0xb4, 0x40, 0xd8, 0x14,
	0xe8, 0x8a, 0x8b, 0x39, 0x13, 0x2b, 0x3a, 0x8c, 0x2d, 0xe7, 0x4c, 0xd1, 0x19, 0x8e, 0x01, 0x96,
	0xd3, 0x58, 0x62, 0xc7, 0xbf, 0xa7, 0xb5, 0xa8, 0x27, 0x1e, 0x19, 0xca, 0x87, 0x84, 0xac, 0xa3,
	0x94, 0x26, 0xd2, 0x10, 0xf5, 0x8f, 0x3d, 0x78, 0x85, 0xf2, 0x45, 0x16, 0xc6, 0xdc, 0x6a, 0x56,
	0x48, 0x8f, 0xcd, 0xe1, 0x7f, 0x8a, 0x3e, 0x7f, 0x6f, 0x1a, 0xa8, 0x59, 0x3c, 0xb1, 0x29, 0x5f,
	0x38, 0x06, 0xed, 0x64, 0x77, 0xa0, 0x92, 0xab, 0xda, 0x53, 0xfd, 0xf3, 0x17, 0x42, 0x93, 0xba,
	0xb9, 0x58, 0xbc, 0xf3, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x4e, 0x78, 0xa0, 0x38, 0xd5, 0x09,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TasksClient is the client API for Tasks service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TasksClient interface {
	// Retrieves the specified task.
	GetTask(ctx context.Context, in *GetTaskRequest, opts ...grpc.CallOption) (*Task, error)
	// Upload Data, Create A Task
	CreateTask(ctx context.Context, in *CreateTaskRequest, opts ...grpc.CallOption) (*TaskProgress, error)
	// Cancel One Task
	CancelTask(ctx context.Context, in *GetTaskRequest, opts ...grpc.CallOption) (*status.Status, error)
	// Check Progress
	CheckTask(ctx context.Context, in *GetTaskRequest, opts ...grpc.CallOption) (*TaskProgress, error)
	// Upload Data, Create A Task
	GetTaskStatistics(ctx context.Context, in *StatisticsRequest, opts ...grpc.CallOption) (*StatisticsResponse, error)
	// For Worker Acquire
	AcquireTask(ctx context.Context, in *AcquireTaskRequest, opts ...grpc.CallOption) (*AcquireTaskResponse, error)
	// For Worker Return
	SubmitTask(ctx context.Context, in *SubmitTaskRequest, opts ...grpc.CallOption) (*status.Status, error)
}

type tasksClient struct {
	cc *grpc.ClientConn
}

func NewTasksClient(cc *grpc.ClientConn) TasksClient {
	return &tasksClient{cc}
}

func (c *tasksClient) GetTask(ctx context.Context, in *GetTaskRequest, opts ...grpc.CallOption) (*Task, error) {
	out := new(Task)
	err := c.cc.Invoke(ctx, "/rcrai.rpc.deepschd.Tasks/GetTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tasksClient) CreateTask(ctx context.Context, in *CreateTaskRequest, opts ...grpc.CallOption) (*TaskProgress, error) {
	out := new(TaskProgress)
	err := c.cc.Invoke(ctx, "/rcrai.rpc.deepschd.Tasks/CreateTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tasksClient) CancelTask(ctx context.Context, in *GetTaskRequest, opts ...grpc.CallOption) (*status.Status, error) {
	out := new(status.Status)
	err := c.cc.Invoke(ctx, "/rcrai.rpc.deepschd.Tasks/CancelTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tasksClient) CheckTask(ctx context.Context, in *GetTaskRequest, opts ...grpc.CallOption) (*TaskProgress, error) {
	out := new(TaskProgress)
	err := c.cc.Invoke(ctx, "/rcrai.rpc.deepschd.Tasks/CheckTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tasksClient) GetTaskStatistics(ctx context.Context, in *StatisticsRequest, opts ...grpc.CallOption) (*StatisticsResponse, error) {
	out := new(StatisticsResponse)
	err := c.cc.Invoke(ctx, "/rcrai.rpc.deepschd.Tasks/GetTaskStatistics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tasksClient) AcquireTask(ctx context.Context, in *AcquireTaskRequest, opts ...grpc.CallOption) (*AcquireTaskResponse, error) {
	out := new(AcquireTaskResponse)
	err := c.cc.Invoke(ctx, "/rcrai.rpc.deepschd.Tasks/AcquireTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tasksClient) SubmitTask(ctx context.Context, in *SubmitTaskRequest, opts ...grpc.CallOption) (*status.Status, error) {
	out := new(status.Status)
	err := c.cc.Invoke(ctx, "/rcrai.rpc.deepschd.Tasks/SubmitTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TasksServer is the server API for Tasks service.
type TasksServer interface {
	// Retrieves the specified task.
	GetTask(context.Context, *GetTaskRequest) (*Task, error)
	// Upload Data, Create A Task
	CreateTask(context.Context, *CreateTaskRequest) (*TaskProgress, error)
	// Cancel One Task
	CancelTask(context.Context, *GetTaskRequest) (*status.Status, error)
	// Check Progress
	CheckTask(context.Context, *GetTaskRequest) (*TaskProgress, error)
	// Upload Data, Create A Task
	GetTaskStatistics(context.Context, *StatisticsRequest) (*StatisticsResponse, error)
	// For Worker Acquire
	AcquireTask(context.Context, *AcquireTaskRequest) (*AcquireTaskResponse, error)
	// For Worker Return
	SubmitTask(context.Context, *SubmitTaskRequest) (*status.Status, error)
}

func RegisterTasksServer(s *grpc.Server, srv TasksServer) {
	s.RegisterService(&_Tasks_serviceDesc, srv)
}

func _Tasks_GetTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TasksServer).GetTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rcrai.rpc.deepschd.Tasks/GetTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TasksServer).GetTask(ctx, req.(*GetTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Tasks_CreateTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TasksServer).CreateTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rcrai.rpc.deepschd.Tasks/CreateTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TasksServer).CreateTask(ctx, req.(*CreateTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Tasks_CancelTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TasksServer).CancelTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rcrai.rpc.deepschd.Tasks/CancelTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TasksServer).CancelTask(ctx, req.(*GetTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Tasks_CheckTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TasksServer).CheckTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rcrai.rpc.deepschd.Tasks/CheckTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TasksServer).CheckTask(ctx, req.(*GetTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Tasks_GetTaskStatistics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatisticsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TasksServer).GetTaskStatistics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rcrai.rpc.deepschd.Tasks/GetTaskStatistics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TasksServer).GetTaskStatistics(ctx, req.(*StatisticsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Tasks_AcquireTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AcquireTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TasksServer).AcquireTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rcrai.rpc.deepschd.Tasks/AcquireTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TasksServer).AcquireTask(ctx, req.(*AcquireTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Tasks_SubmitTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubmitTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TasksServer).SubmitTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rcrai.rpc.deepschd.Tasks/SubmitTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TasksServer).SubmitTask(ctx, req.(*SubmitTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Tasks_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rcrai.rpc.deepschd.Tasks",
	HandlerType: (*TasksServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetTask",
			Handler:    _Tasks_GetTask_Handler,
		},
		{
			MethodName: "CreateTask",
			Handler:    _Tasks_CreateTask_Handler,
		},
		{
			MethodName: "CancelTask",
			Handler:    _Tasks_CancelTask_Handler,
		},
		{
			MethodName: "CheckTask",
			Handler:    _Tasks_CheckTask_Handler,
		},
		{
			MethodName: "GetTaskStatistics",
			Handler:    _Tasks_GetTaskStatistics_Handler,
		},
		{
			MethodName: "AcquireTask",
			Handler:    _Tasks_AcquireTask_Handler,
		},
		{
			MethodName: "SubmitTask",
			Handler:    _Tasks_SubmitTask_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rcapis/rpc/deepschd/task.proto",
}
