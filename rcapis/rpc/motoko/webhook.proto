syntax = "proto3";

package rcrai.rpc.motoko;

import "rcapis/api/annotations.proto";
import "rcapis/rpc/motoko/context.proto";
import "rcapis/rpc/motoko/intent.proto";
import "rcapis/rpc/motoko/session.proto";

import "google/protobuf/struct.proto";



option cc_enable_arenas = true;
option go_package = "github.com/rcrai/rcapis/rcapis/rpc/motoko/webhook;webhook";

option java_multiple_files = true;
option java_outer_classname = "WebhookProto";
option java_package = "com.rcrai.rcapis.rpc.motoko";



// The request message for a webhook call.
message WebhookRequest {
    // The unique identifier of detectIntent request session.
    // Can be used to identify end-user inside webhook implementation.
    // Format: `projects/<Project ID>/agent/sessions/<Session ID>`.
    string session = 4;

    // The unique identifier of the response. Contains the same value as
    // `[Streaming]DetectIntentResponse.response_id`.
    string response_id = 1;

    // The result of the conversational query or event processing. Contains the
    // same value as `[Streaming]DetectIntentResponse.query_result`.
    QueryResult query_result = 2;

    // Optional. The contents of the original request that was passed to
    // `[Streaming]DetectIntent` call.
    OriginalDetectIntentRequest original_detect_intent_request = 3;
}

// The response message for a webhook call.
message WebhookResponse {
    // Optional. The text to be shown on the screen. This value is passed directly
    // to `QueryResult.fulfillment_text`.
    string fulfillment_text = 1;

    // Optional. The collection of rich messages to present to the user. This
    // value is passed directly to `QueryResult.fulfillment_messages`.
    repeated Intent.Message fulfillment_messages = 2;

    // Optional. This value is passed directly to `QueryResult.webhook_source`.
    string source = 3;

    // Optional. This value is passed directly to `QueryResult.webhook_payload`.
    google.protobuf.Struct payload = 4;

    // Optional. The collection of output contexts. This value is passed directly
    // to `QueryResult.output_contexts`.
    repeated Context output_contexts = 5;

    // Optional. Makes the platform immediately invoke another `DetectIntent` call
    // internally with the specified event as input.
    EventInput followup_event_input = 6;
}

// Represents the contents of the original request that was passed to
// `[Streaming]DetectIntent call`.
message OriginalDetectIntentRequest {
    // The source of this request, e.g., Google, Facebook, Slack. It is set by
    // Dialogflow-owned servers.
    string source = 1;

    // Optional. This field is set to the value of `QueryParameters.payload` field
    // passed in the request.
    google.protobuf.Struct payload = 3;
}
